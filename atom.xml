<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://tau15h.coding-pages.com/</id>
    <title>Heal On My Hill</title>
    <updated>2020-03-20T12:23:03.917Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://tau15h.coding-pages.com/"/>
    <link rel="self" href="https://tau15h.coding-pages.com/atom.xml"/>
    <subtitle>我要将你拯救 逃离人类荒谬</subtitle>
    <logo>https://tau15h.coding-pages.com/images/avatar.png</logo>
    <icon>https://tau15h.coding-pages.com/favicon.ico</icon>
    <rights>All rights reserved 2020, Heal On My Hill</rights>
    <entry>
        <title type="html"><![CDATA[机器学习 | Regression Demo| Python 代码 | 李宏毅]]></title>
        <id>https://tau15h.coding-pages.com/post/ji-qi-xue-xi-or-regression-demoor-python-dai-ma-or-li-hong-yi/</id>
        <link href="https://tau15h.coding-pages.com/post/ji-qi-xue-xi-or-regression-demoor-python-dai-ma-or-li-hong-yi/">
        </link>
        <updated>2020-03-20T12:19:18.000Z</updated>
        <content type="html"><![CDATA[<!-- more -->
<h3 id="机器学习-regression-demo-python-代码-jupyter-notebook运行-李宏毅">机器学习 | Regression Demo| Python 代码 | Jupyter Notebook运行 |李宏毅</h3>
<p><a href="https://www.bilibili.com/video/av35932863?p=4">https://www.bilibili.com/video/av35932863?p=4</a><br>
在bilibili看李宏毅老师的机器学习课程，其中<strong>P3 Regression Demo</strong>里面，关于宝可梦CP值预测的应用代码，我跟着视频用Jupyter Notebook 写出来运行成功了。给大家参考，代码如下：</p>
<pre><code class="language-python">import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
%matplotlib inline
#plt.rcParams['font.sans-serif']=['KaiTi']
#plt.rcParams['axes.unicode_minus']=False

x_data= [ 338.,  333., 328., 207., 226., 25., 179., 60., 208., 606.]
y_data= [ 640.,  633., 619., 393., 428., 27., 193., 66., 226., 1591.] 
# ydata =b + w * xdata

x = np.arange(-200, -100, 1) #bias
y = np.arange(-5,5,0.1) #weight
Z = np.zeros((len(x), len(y)))
X, Y = np.meshgrid(x, y)
for i in range(len(x)):
    for j in range(len(y)):
        b = x[i]
        w = y[j]
        Z[j][i] = 0
        for n in range(len(x_data)):
            Z[j][i] = Z[j][i]  + (y_data[n] - b - w*x_data[n]) **2
        Z[j][i] =   Z[j][i] /len(x_data)

# ydata = b + w * xdata
b = -120 # initial b
w = -4 #intial w
lr =0.000001 
#老师视频里说客制化b 和 w的lr后，这里设置lr =1 就行
#但是我执行后提示“Result too large”
#所以我调成lr =0.000001 
#iteration 为一百万次
#大家也可以自己调调看

iteration = 1000000 #

# Store initial values for plotting.
b_history = [b]
w_history = [w]

lr_b = 0 #客制化b的learning rate 的初始值
lr_w = 0 #客制化w的learning rate 的初始值

# Iterations
for i in range(iteration):
    
    b_grad = 0.0
    w_grad = 0.0
    for n in range(len(x_data)):
        b_grad = b_grad - 2.0*(y_data[n] - b - w*x_data[n]) *1.0
        w_grad = w_grad - 2.0*(y_data[n] - b - w*x_data[n])*x_data[n]
        
    lr_b = lr_b + b_grad ** 2 #客制化b的learning rate
    lr_w = lr_w + w_grad ** 2 #客制化w的learning rate
        
    # Update parameters.
    b = b - lr * b_grad
    w = w - lr * w_grad
    
    # Store parameters for plotting
    b_history.append(b)
    w_history.append(w)

# plot the figure
plt.contourf(x, y, Z, 50, alpha = 0.5, cmap=plt.get_cmap('jet'))
plt.plot([-188.4], [2.67], 'x', ms = 12, markeredgewidth = 3, color='orange')
plt.plot(b_history, w_history, 'o-', ms=3, lw=1.5, color='black')
plt.xlim(-200, -100)
plt.ylim(-5,5)
plt.xlabel(r'$b$', fontsize=16)
plt.ylabel(r'$w$', fontsize=16)
plt.show()
        
</code></pre>
<p><strong>运行结果：</strong><br>
<img src="https://img-blog.csdnimg.cn/2020021212003614.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQ0NjA1NQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"><br>
另外，非常小白的我第一次用Jupyter Notebook。<br>
给大家也分享一下：</p>
<ol>
<li>官网下载安装<br>
<a href="https://www.anaconda.com/">https://www.anaconda.com/</a><br>
<img src="https://img-blog.csdnimg.cn/20200212122457813.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQ0NjA1NQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"><img src="https://img-blog.csdnimg.cn/20200212122433718.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQ0NjA1NQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"></li>
<li>运行Anaconda 和 Jupyter Notebook<br>
我用的是Mac，安装完Anaconda后，开启要一段时间，首页就会有Notebook，点击Launch，系统就会自动运行终端打开网页。<br>
<img src="https://img-blog.csdnimg.cn/20200212122357158.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQ0NjA1NQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"></li>
<li>Jupyter Notebook 使用方法<br>
<img src="https://img-blog.csdnimg.cn/20200212122842271.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQ0NjA1NQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"><img src="https://img-blog.csdnimg.cn/20200212122928613.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQ0NjA1NQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"><br>
分享完毕！请大佬们多多指教！</li>
</ol>
<p>分享参考链接：<br>
<a href="https://www.cnblogs.com/nxld/p/6566380.html">Jupyter Notebook 快速入门： https://www.cnblogs.com/nxld/p/6566380.html</a></p>
]]></content>
    </entry>
</feed>